import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

export function middleware(request: NextRequest) {
  const { pathname } = request.nextUrl

  // Role-based route protection
  if (pathname.startsWith('/Roles/')) {
    const role = pathname.split('/')[2]?.toUpperCase()
    const userRole = request.cookies.get('userRole')?.value

    if (!userRole || userRole !== role) {
      return NextResponse.redirect(new URL('/auth/login', request.url))
    }
  }

  // Super admin dashboard protection
  if (pathname.startsWith('/dashboard') && !pathname.startsWith('/dashboard/')) {
    const userRole = request.cookies.get('userRole')?.value
    if (userRole !== 'SUPER_ADMIN') {
      return NextResponse.redirect(new URL('/auth/login', request.url))
    }
  }

  return NextResponse.next()
}

export const config = {
  matcher: ['/dashboard/:path*', '/Roles/:path*']
}